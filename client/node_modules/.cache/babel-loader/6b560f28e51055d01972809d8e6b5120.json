{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodejs\\\\mediocademy\\\\social\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getAllProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getAllProfiles,\n  profile: {\n    profiles,\n    load\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, load ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }), \"Browser and follow with member\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    kunci: profile.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 46\n    }\n  }) //<li>{profile._id}</li>\n  ) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }, \"No profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Profiles);","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getAllProfiles","Profiles","profile","profiles","load","length","map","_id","user","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,OAAO,EAAG;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAA5B,CAAD,KAAoD;AACjET,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMI,IAAI,gBACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,mCAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEYD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GAEIF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,iBACf,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA1B;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAiD,IAAA,KAAK,EAAEA,OAAO,CAACM,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAEhB;AAFJ,GAFJ,gBAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVhB,CALJ,CAJZ,CADJ;AA+BH,CApCD;;AAsCAP,QAAQ,CAACQ,SAAT,GAAqB;AACjBT,EAAAA,cAAc,EAAGJ,SAAS,CAACc,IAAV,CAAeC,UADf;AAEjBT,EAAAA,OAAO,EAAGN,SAAS,CAACgB,MAAV,CAAiBD;AAFV,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7BZ,EAAAA,OAAO,EAAGY,KAAK,CAACZ;AADa,CAAJ,CAA7B;;AAGA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,QAA5C,CAAf","sourcesContent":["import React , {Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getAllProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getAllProfiles, profile : { profiles, load}}) => {\r\n    useEffect(()=>{\r\n        getAllProfiles();\r\n    }, [getAllProfiles])\r\n\r\n    return (\r\n        <Fragment>\r\n            { load ? \r\n                ( <Spinner />)\r\n                 : (\r\n                    <Fragment>\r\n                        <h1 className=\"large text-primary\"></h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fab fa-connectdevelop\"/>Browser and follow with member\r\n                        </p>\r\n                        <div className=\"profiles\">\r\n                                {\r\n                                    profiles.length > 0 ? \r\n                                    (\r\n                                        profiles.map(profile =>(\r\n                                             <ProfileItem key={profile._id} profile={profile} kunci={profile.user}/>\r\n                                            //<li>{profile._id}</li>\r\n                                        ))\r\n                                    )\r\n                                     : (\r\n                                        <h4>No profiles found...</h4>\r\n\r\n                                     )\r\n                                }\r\n                        </div>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles : PropTypes.func.isRequired,\r\n    profile : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    profile : state.profile\r\n});\r\nexport default connect(mapStateToProps, { getAllProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}