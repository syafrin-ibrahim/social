{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodejs\\\\mediocademy\\\\social\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepo } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepo,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepo(username);\n  }, [getGithubRepo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Github Repos\"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }) : repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo._id,\n    className: \"repo bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, repo.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Forks: \", repo.forks_count))))));\n};\n\nProfileGithub.propTypes = {\n  getGithubRepo: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepo\n})(ProfileGithub);","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepo","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","func","isRequired","string","array","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAaF,EAAAA,aAAb;AAA4BG,EAAAA;AAA5B,CAAD,KAAwC;AAE1DP,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,aAAa,CAACE,QAAD,CAAb;AACH,GAFQ,EAEP,CAACF,aAAD,CAFO,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEOG,KAAK,KAAK,IAAV,gBACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGCA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACd;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmEF,IAAI,CAACG,IAAxE,CAAJ,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,WAAT,CAFA,CADJ,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4CJ,IAAI,CAACK,gBAAjD,CADH,eAEG;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGL,IAAI,CAACM,cADR,CAFH,eAKL;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0CN,IAAI,CAACO,WAA/C,CALK,CADL,CALA,CADA,CALR,CADJ;AA2BH,CAhCD;;AAkCAX,aAAa,CAACY,SAAd,GAA0B;AACtBb,EAAAA,aAAa,EAAGH,SAAS,CAACiB,IAAV,CAAeC,UADT;AAEtBb,EAAAA,QAAQ,EAAGL,SAAS,CAACmB,MAAV,CAAiBD,UAFN;AAGtBZ,EAAAA,KAAK,EAAGN,SAAS,CAACoB,KAAV,CAAgBF;AAHF,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BhB,EAAAA,KAAK,EAAGgB,KAAK,CAACC,OAAN,CAAcjB;AADQ,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,aAA5C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepo } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username,  getGithubRepo, repos}) => {\r\n\r\n    useEffect(()=>{\r\n        getGithubRepo(username)\r\n    },[getGithubRepo]);\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n              {repos === null ? (\r\n                  <Spinner />\r\n              ) : (\r\n                repos.map(repo => (\r\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                    <div>\r\n                    <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                    <p>{repo.description}</p>\r\n                    </div>\r\n                <div>\r\n                     <ul>\r\n                        <li className='badge badge-primary'>Stars: {repo.stargazers_count}</li>\r\n                        <li className='badge badge-dark'>\r\n                Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}\r\n            </li>\r\n                </ul>\r\n                </div>\r\n                </div>\r\n        ))\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepo : PropTypes.func.isRequired,\r\n    username : PropTypes.string.isRequired,\r\n    repos : PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos : state.profile.repos\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getGithubRepo })(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}