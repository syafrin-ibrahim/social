{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_SINGLEPOST, ADD_COMMENT, REMOVE_COMMENT } from './types';\nexport const getAllPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      payload: res.data,\n      type: GET_POSTS\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.res.status\n      }\n    });\n  }\n};\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  if (window.confirm('yakin akan menghapus postingan ini ?')) {\n    try {\n      const res = await axios.delete(`/api/posts/${id}`);\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n      dispatch(setAlert('Post Success Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Success Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getSinglePost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_SINGLEPOST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    'Content_Type': 'application/json'\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('comment success added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('comment waas removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_SINGLEPOST","ADD_COMMENT","REMOVE_COMMENT","getAllPosts","dispatch","res","get","payload","data","type","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","window","confirm","delete","addPost","formData","config","headers","post","getSinglePost","addComment","postId","deleteComment","commentId","REMOVE_COMMENT_COMMENT"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert } from './alert';\r\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, \r\n    DELETE_POST, ADD_POST, GET_SINGLEPOST, ADD_COMMENT, REMOVE_COMMENT } from './types';\r\n\r\n\r\nexport const getAllPosts = ()=> async dispatch => {\r\n    try{\r\n\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            payload : res.data,\r\n            type : GET_POSTS\r\n        })\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg: err.response.statusText, status: err.res.status }\r\n        })\r\n    }\r\n} \r\n\r\n\r\n\r\nexport const addLike = (id)=> async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n        dispatch({\r\n            type : UPDATE_LIKES,\r\n            payload : { id, likes:  res.data}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const removeLike = (id)=> async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n        dispatch({\r\n            type : UPDATE_LIKES,\r\n            payload : { id, likes:  res.data}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePost = (id)=> async dispatch => {\r\n    if(window.confirm('yakin akan menghapus postingan ini ?')){\r\n        try{\r\n            const res = await axios.delete(`/api/posts/${id}`);\r\n            dispatch({\r\n                type : DELETE_POST,\r\n                payload : id\r\n            })\r\n            dispatch(setAlert('Post Success Removed','success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : POST_ERROR,\r\n                payload : { msg : err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const  addPost = (formData)=> async dispatch => {\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        try{\r\n            const res = await axios.post(`/api/posts`, formData, config);\r\n            dispatch({\r\n                type : ADD_POST,\r\n                payload : res.data\r\n            })\r\n            dispatch(setAlert('Post Success Created','success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : POST_ERROR,\r\n                payload : { msg : err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n\r\n\r\n}\r\n\r\nexport const getSinglePost = (id)=> async dispatch =>{\r\n    try{\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n            dispatch({\r\n                type :  GET_SINGLEPOST,\r\n                payload : res.data\r\n            })\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (postId, formData)=> async dispatch => {\r\n\r\n    const config =  {\r\n        'Content_Type' : 'application/json'\r\n    }\r\n    try{\r\n\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n        dispatch({\r\n            type : ADD_COMMENT,\r\n            payload : res.data\r\n        })\r\n\r\n        dispatch(setAlert('comment success added', 'success'));\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteComment = (postId, commentId)=> async dispatch => {\r\n\r\n    \r\n    try{\r\n\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n        dispatch({\r\n            type : REMOVE_COMMENT_COMMENT,\r\n            payload : commentId\r\n        })\r\n\r\n        dispatch(setAlert('comment waas removed', 'success'));\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}