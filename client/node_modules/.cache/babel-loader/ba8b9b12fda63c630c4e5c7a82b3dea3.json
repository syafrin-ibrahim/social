{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  load: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: res.data,\n        load: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.post],\n        load: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        load: true,\n        error: payload\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        load: false,\n        posts: state.posts.filter(post => post._id !== payload)\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post === payload.id ? { ...post,\n          like: payload.likes\n        } : post),\n        load: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","initialState","posts","post","load","error","state","action","type","payload","res","data","filter","_id","map","id","like","likes"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,WAA9C,EAA2DC,QAA3D,QAA2E,kBAA3E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,IAAI,EAAG,IAFU;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,KAAK,EAAG;AAJS,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAuC;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKZ,SAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAGQ,GAAG,CAACC,IAFT;AAGHP,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAKJ,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,KAAK,EAAG,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACH,IAAnB,CAFL;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAKP,UAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,IAAI,EAAG,IAFJ;AAGHC,QAAAA,KAAK,EAAGI;AAHL,OAAP;;AAKJ,SAAKV,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,IAAI,EAAG,KAFJ;AAGHF,QAAAA,KAAK,EAAII,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmBT,IAAI,IAAEA,IAAI,CAACU,GAAL,KAAaJ,OAAtC;AAHN,OAAP;;AAKJ,SAAKX,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYY,GAAZ,CAAgBX,IAAI,IAAIA,IAAI,KAAKM,OAAO,CAACM,EAAjB,GAAsB,EAAE,GAAGZ,IAAL;AAAWa,UAAAA,IAAI,EAAEP,OAAO,CAACQ;AAAzB,SAAtB,GAAwDd,IAAhF,CAFL;AAGHC,QAAAA,IAAI,EAAG;AAHJ,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAhCR;AAkCH","sourcesContent":["import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts : [],\r\n    post : null,\r\n    load: true,\r\n    error : {}\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_POSTS : \r\n            return {\r\n                ...state,\r\n                posts : res.data,\r\n                load :false\r\n            }\r\n        case ADD_POST : \r\n            return {\r\n                ...state,\r\n                posts : [payload, ...state.post],\r\n                load :false\r\n            }\r\n        case POST_ERROR : \r\n            return { \r\n                ...state,\r\n                load : true,\r\n                error : payload\r\n            }\r\n        case DELETE_POST : \r\n            return { \r\n                ...state,\r\n                load : false,\r\n                posts :  state.posts.filter(post=>post._id !== payload)\r\n            }\r\n        case UPDATE_LIKES : \r\n            return { \r\n                ...state,\r\n                posts : state.posts.map(post => post === payload.id ? { ...post, like: payload.likes} : post),\r\n                load : false\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}