{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodejs\\\\mediocademy\\\\social\\\\client\\\\src\\\\components\\\\comments\\\\Coment.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../../components/post/PostItem';\nimport { getSinglePost } from \"../../actions/post\";\nimport CommentForm from './CommentForm';\n\nconst Coment = ({\n  getSinglePost,\n  post: {\n    post,\n    load\n  },\n  match\n}) => {\n  useEffect(() => {\n    getSinglePost(match.params.id);\n  }, [getSinglePost]);\n  return load || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Back To Posts\"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CommentForm, {\n    postId: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n};\n\nComent.propTypes = {\n  getSinglePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSinglePost\n})(Coment);","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/components/comments/Coment.js"],"names":["React","useEffect","Fragment","PropTypes","Link","connect","Spinner","PostItem","getSinglePost","CommentForm","Coment","post","load","match","params","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,aAAF;AAAiBG,EAAAA,IAAI,EAAG;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAxB;AAAuCC,EAAAA;AAAvC,CAAD,KAAmD;AAE9DZ,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAb;AACH,GAFQ,EAEP,CAACP,aAAD,CAFO,CAAT;AAIA,SAASI,IAAI,IAAID,IAAI,KAAK,IAAjB,gBAA0B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,gBACL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAIA,IAAI,CAACK,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH,CAhBD;;AAkBAN,MAAM,CAACO,SAAP,GAAmB;AACfT,EAAAA,aAAa,EAAGL,SAAS,CAACe,IAAV,CAAeC,UADhB;AAEfR,EAAAA,IAAI,EAAGR,SAAS,CAACiB,MAAV,CAAiBD;AAFT,CAAnB;;AAKA,MAAME,eAAe,GAAIC,KAAD,IAAS;AAC7B,SAAO;AACHX,IAAAA,IAAI,EAAGW,KAAK,CAACX;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,MAA5C,CAAf","sourcesContent":["import React, { useEffect , Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../../components/post/PostItem'\r\nimport { getSinglePost } from \"../../actions/post\";\r\nimport CommentForm from './CommentForm'\r\n\r\nconst Coment = ({ getSinglePost, post : { post, load}, match}) => {\r\n\r\n    useEffect(()=>{\r\n        getSinglePost(match.params.id); \r\n    },[getSinglePost])\r\n    \r\n    return   load || post === null ? ( <Spinner /> ):(\r\n        <Fragment>\r\n            <Link to='/posts' className='btn'>\r\n            Back To Posts\r\n            </Link>\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postId = {post._id} />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nComent.propTypes = {\r\n    getSinglePost : PropTypes.func.isRequired,\r\n    post : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        post : state.post\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSinglePost })(Coment);\r\n\r\n"]},"metadata":{},"sourceType":"module"}