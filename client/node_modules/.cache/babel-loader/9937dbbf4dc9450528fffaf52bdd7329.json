{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE } from './types';\nexport const getProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const makeProfile = (form, history, edit = false) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile', form, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    }); //setAlert\n\n    dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success')); //jika create profile\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addExperience = (form, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', form, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); //set alert\n\n    dispatch(setAlert('experience was added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    console.log('erronya => ', errors);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = (form, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile/education', form, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); //set alert\n\n    dispatch(setAlert('education was added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/actions/profile.js"],"names":["axios","setAlert","PROFILE_ERROR","GET_PROFILE","UPDATE_PROFILE","getProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","makeProfile","form","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","console","log","addEducation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,cAArC,QAA0D,SAA1D;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAgB;AAE5C,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGN,WADF;AAELO,MAAAA,OAAO,EAAGH,GAAG,CAACI;AAFT,KAAD,CAAR;AAIH,GAPD,CAOC,OAAMC,GAAN,EAAU;AAGPN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGP,aADF;AAELQ,MAAAA,OAAO,EAAG;AAAEG,QAAAA,GAAG,EAAGD,GAAG,CAACE,QAAJ,CAAaC,UAArB;AAAiCC,QAAAA,MAAM,EAAGJ,GAAG,CAACE,QAAJ,CAAaE;AAAvD;AAFL,KAAD,CAAR;AAIH;AAEJ,CAlBM;AAoBP,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAI,GAAG,KAAvB,KAAiC,MAAMd,QAAN,IAAkB;AAC1E,QAAMe,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAiB;AADX;AADC,GAAf;;AAKA,MAAG;AACC,UAAMf,GAAG,GAAG,MAAMP,KAAK,CAACuB,IAAN,CAAW,cAAX,EAA2BL,IAA3B,EAAiCG,MAAjC,CAAlB;AACAf,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGN,WADF;AAELO,MAAAA,OAAO,EAAGH,GAAG,CAACI;AAFT,KAAD,CAAR,CAFD,CAMC;;AACAL,IAAAA,QAAQ,CAACL,QAAQ,CAACmB,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,EAA+C,SAA/C,CAAT,CAAR,CAPD,CAQC;;AACA,QAAG,CAACA,IAAJ,EAAS;AACLD,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH;AAEJ,GAbD,CAaC,OAAMZ,GAAN,EAAU;AACP,UAAMa,MAAM,GAAGb,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBc,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACL,QAAQ,CAAC0B,KAAK,CAACd,GAAP,EAAY,QAAZ,CAAT,CAAhC;AAEH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGP,aADF;AAELQ,MAAAA,OAAO,EAAG;AAAEG,QAAAA,GAAG,EAAGD,GAAG,CAACE,QAAJ,CAAaC,UAArB;AAAiCC,QAAAA,MAAM,EAAGJ,GAAG,CAACE,QAAJ,CAAaE;AAAvD;AAFL,KAAD,CAAR;AAIH;AACJ,CA/BM;AAkCP,OAAO,MAAMY,aAAa,GAAG,CAACV,IAAD,EAAOC,OAAP,KAAmB,MAAMb,QAAN,IAAiB;AAE7D,MAAG;AACC,UAAMe,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AADC,KAAf;AAKA,UAAMf,GAAG,GAAG,MAAMP,KAAK,CAAC6B,GAAN,CAAU,yBAAV,EAAqCX,IAArC,EAA2CG,MAA3C,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGL,cADF;AAELM,MAAAA,OAAO,EAAGH,GAAG,CAACI;AAFT,KAAD,CAAR,CARD,CAaC;;AACAL,IAAAA,QAAQ,CAACL,QAAQ,CAAC,sBAAD,EAAyB,SAAzB,CAAT,CAAR;AACAkB,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAhBD,CAgBC,OAAMZ,GAAN,EAAU;AAEP,UAAMa,MAAM,GAAGb,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBc,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACL,QAAQ,CAAC0B,KAAK,CAACd,GAAP,EAAY,QAAZ,CAAT,CAAhC;AAEH;;AACDiB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,MAA3B;AAEAnB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGP,aADF;AAELQ,MAAAA,OAAO,EAAG;AAAEG,QAAAA,GAAG,EAAGD,GAAG,CAACE,QAAJ,CAAaC,UAArB;AAAiCC,QAAAA,MAAM,EAAGJ,GAAG,CAACE,QAAJ,CAAaE;AAAvD;AAFL,KAAD,CAAR;AAIH;AAEJ,CAjCM;AAkCP,OAAO,MAAMgB,YAAY,GAAG,CAACd,IAAD,EAAOC,OAAP,KAAmB,MAAMb,QAAN,IAAiB;AAC5D,QAAMe,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAiB;AADX;AADC,GAAf;;AAMA,MAAG;AACC,UAAMf,GAAG,GAAG,MAAMP,KAAK,CAACuB,IAAN,CAAW,wBAAX,EAAqCL,IAArC,EAA2CG,MAA3C,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGL,cADF;AAELM,MAAAA,OAAO,EAAGH,GAAG,CAACI;AAFT,KAAD,CAAR,CAHD,CAQC;;AACAL,IAAAA,QAAQ,CAACL,QAAQ,CAAC,qBAAD,EAAwB,SAAxB,CAAT,CAAR;AACAkB,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAXD,CAWC,OAAMZ,GAAN,EAAU;AAEP,UAAMa,MAAM,GAAGb,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBc,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACL,QAAQ,CAAC0B,KAAK,CAACd,GAAP,EAAY,QAAZ,CAAT,CAAhC;AAEH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGP,aADF;AAELQ,MAAAA,OAAO,EAAG;AAAEG,QAAAA,GAAG,EAAGD,GAAG,CAACE,QAAJ,CAAaC,UAArB;AAAiCC,QAAAA,MAAM,EAAGJ,GAAG,CAACE,QAAJ,CAAaE;AAAvD;AAFL,KAAD,CAAR;AAIH;AAEJ,CAhCM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE} from './types';\r\n\r\nexport const getProfile = () => async dispatch=>{\r\n\r\n    try{\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type : GET_PROFILE,\r\n            payload : res.data\r\n        })\r\n    }catch(err){\r\n       \r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const makeProfile = (form, history, edit = false) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/profile', form, config);\r\n        dispatch({\r\n            type : GET_PROFILE,\r\n            payload : res.data\r\n        })\r\n        //setAlert\r\n        dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success'));\r\n        //jika create profile\r\n        if(!edit){\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    }catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const addExperience = (form, history) => async dispatch =>{\r\n    \r\n    try{\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/experience', form, config);\r\n\r\n        dispatch({\r\n            type : UPDATE_PROFILE,\r\n            payload : res.data\r\n        })\r\n\r\n        //set alert\r\n        dispatch(setAlert('experience was added', 'success'));\r\n        history.push('/dashboard');\r\n    }catch(err){\r\n\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n        console.log('erronya => ', errors);\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n\r\n}\r\nexport const addEducation = (form, history) => async dispatch =>{\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post('/api/profile/education', form, config);\r\n\r\n        dispatch({\r\n            type : UPDATE_PROFILE,\r\n            payload : res.data\r\n        })\r\n\r\n        //set alert\r\n        dispatch(setAlert('education was added', 'success'));\r\n        history.push('/dashboard');\r\n    }catch(err){\r\n\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}