{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodejs\\\\mediocademy\\\\social\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getAllProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getAllProfiles,\n  profile: {\n    profiles,\n    load\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, profiles && profiles.map(p => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"p._id\"))) // <Fragment>\n  //     { load ? \n  //         ( <Spinner />)\n  //          : (\n  //             <Fragment>\n  //                 <h1 className=\"large text-primary\"></h1>\n  //                 <p className=\"lead\">\n  //                     <i className=\"fab fa-connectdevelop\"/>Browser and follow with member\n  //                 </p>\n  //                 <div className=\"profiles\">\n  //                         {\n  //                             profiles.length > 0 ? \n  //                             (\n  //                                 profiles.map(profile =>(\n  //                                     <ProfileItem key={profile._id} profile={profile} />\n  //                                 ))\n  //                             )\n  //                              : (\n  //                                 <h4>No profiles found...</h4>\n  //                              )\n  //                         }\n  //                 </div>\n  //             </Fragment>\n  //         )\n  //     }\n  // </Fragment>\n  ;\n};\n\nProfiles.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Profiles);","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","ProfileItem","getAllProfiles","Profiles","profile","profiles","load","map","p","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,OAAO,EAAG;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAA5B,CAAD,KAAoD;AACjET,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,QAAQ,IACHA,QAAQ,CAACE,GAAT,CAAaC,CAAC,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADZ,CADA,CAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCJ;AAoCH,CAzCD;;AA2CAL,QAAQ,CAACM,SAAT,GAAqB;AACjBP,EAAAA,cAAc,EAAGJ,SAAS,CAACY,IAAV,CAAeC,UADf;AAEjBP,EAAAA,OAAO,EAAGN,SAAS,CAACc,MAAV,CAAiBD;AAFV,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7BV,EAAAA,OAAO,EAAGU,KAAK,CAACV;AADa,CAAJ,CAA7B;;AAGA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,QAA5C,CAAf","sourcesContent":["import React , {Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getAllProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getAllProfiles, profile : { profiles, load}}) => {\r\n    useEffect(()=>{\r\n        getAllProfiles();\r\n    }, [getAllProfiles])\r\n\r\n    return (\r\n    <div>{ profiles && \r\n                profiles.map(p => (\r\n                    <li>p._id</li>\r\n                )\r\n                )\r\n        }</div>\r\n        // <Fragment>\r\n        //     { load ? \r\n        //         ( <Spinner />)\r\n        //          : (\r\n        //             <Fragment>\r\n        //                 <h1 className=\"large text-primary\"></h1>\r\n        //                 <p className=\"lead\">\r\n        //                     <i className=\"fab fa-connectdevelop\"/>Browser and follow with member\r\n        //                 </p>\r\n        //                 <div className=\"profiles\">\r\n        //                         {\r\n        //                             profiles.length > 0 ? \r\n        //                             (\r\n        //                                 profiles.map(profile =>(\r\n        //                                     <ProfileItem key={profile._id} profile={profile} />\r\n        //                                 ))\r\n        //                             )\r\n        //                              : (\r\n        //                                 <h4>No profiles found...</h4>\r\n\r\n        //                              )\r\n        //                         }\r\n        //                 </div>\r\n        //             </Fragment>\r\n        //         )\r\n        //     }\r\n        // </Fragment>\r\n    )\r\n\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles : PropTypes.func.isRequired,\r\n    profile : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    profile : state.profile\r\n});\r\nexport default connect(mapStateToProps, { getAllProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}