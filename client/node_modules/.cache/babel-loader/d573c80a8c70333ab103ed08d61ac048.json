{"ast":null,"code":"var _jsxFileName = \"E:\\\\nodejs\\\\mediocademy\\\\social\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport { getProfilById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfilById,\n  profile: {\n    profile,\n    load\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfilById(match.params.id);\n  }, [getProfilById]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, profile === null || load ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Back To Profiles\"), auth.isAuth && auth.load === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, \"No experience credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"No education credentials\")), profile.githubusername && /*#__PURE__*/React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }))));\n};\n\nProfile.propTypes = {\n  getProfilById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToprops = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToprops, {\n  getProfilById\n})(Profile);","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/components/profile/Profile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","getProfilById","Profile","profile","load","auth","match","params","id","isAuth","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToprops","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport { getProfilById } from '../../actions/profile';\r\n\r\n\r\nconst Profile = ( { getProfilById, profile : { profile, load }, auth, match}) => {\r\n    useEffect(()=>{\r\n        getProfilById(match.params.id)\r\n    },[getProfilById])\r\n    return (\r\n        <div>\r\n            {profile === null || load ? (\r\n                <Spinner />\r\n                ) : (\r\n                    <Fragment><br/><br/><br/><br/><br/><br/><br/>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                    Back To Profiles\r\n                    </Link>\r\n                    {\r\n                            auth.isAuth &&\r\n                            auth.load === false &&\r\n                            auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                            Edit Profile\r\n                            </Link>)\r\n                    \r\n                    }\r\n                    <div class=\"profile-grid my-1\">\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                         \r\n                        <div className='profile-exp bg-white p-2'>\r\n                          <h2 className='text-primary'>Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                    <Fragment>\r\n                                        {profile.experience.map(experience => (\r\n                                        <ProfileExperience\r\n                                        key={experience._id}\r\n                                        experience={experience}\r\n                                        />))\r\n                                        }\r\n                                    </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        \r\n                        <div className='profile-edu bg-white p-2'>\r\n                          <h2 className='text-primary'>Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                    <Fragment>\r\n                                        {profile.education.map(education => (\r\n                                        <ProfileEducation\r\n                                        key={education._id}\r\n                                        education={education}\r\n                                        />\r\n                                        ))}\r\n                                    </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )\r\n                            }\r\n                        </div> \r\n                        {\r\n                            profile.githubusername && (\r\n                                <ProfileGithub username={profile.githubusername} />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    </Fragment>\r\n                ) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfilById : PropTypes.func.isRequired,\r\n    profile : PropTypes.object.isRequired,\r\n    auth : PropTypes.object.isRequired\r\n}\r\nconst mapStateToprops = state => ({\r\n    profile : state.profile,\r\n    auth : state.auth\r\n})\r\n\r\nexport default connect(mapStateToprops, { getProfilById })(Profile)\r\n"]},"metadata":{},"sourceType":"module"}