{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETE, CLEAR_PROFILE } from './types';\nexport const getProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const makeProfile = (form, history, edit = false) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile', form, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    }); //setAlert\n\n    dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success')); //jika create profile\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addExperience = (form, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', form, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); //set alert\n\n    dispatch(setAlert('experience was added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = (form, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/education', form, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    }); //set alert\n\n    dispatch(setAlert('education was added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  if (window.confirm) {\n    try {\n      const res = await axios.delete(`/api/profile/experience/${id}`);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert('experince successremoved', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n}; //delete education\n\nexport const deleteEducation = id => async dispatch => {\n  if (window.confirm) {\n    try {\n      const res = await axios.delete(`/api/profile/education/${id}`);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert('education success removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n}; // delete account \n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETE\n      });\n      dispatch(setAlert('Your Account Has Been Deleted', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/actions/profile.js"],"names":["axios","setAlert","PROFILE_ERROR","GET_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETE","CLEAR_PROFILE","getProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","makeProfile","form","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","window","confirm","delete","deleteEducation","deleteAccount"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { PROFILE_ERROR, GET_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETE, CLEAR_PROFILE} from './types';\r\n\r\nexport const getProfile = () => async dispatch =>{\r\n\r\n    try{\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type : GET_PROFILE,\r\n            payload : res.data\r\n        })\r\n    }catch(err){\r\n       \r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const makeProfile = (form, history, edit = false) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/profile', form, config);\r\n        dispatch({\r\n            type : GET_PROFILE,\r\n            payload : res.data\r\n        })\r\n        //setAlert\r\n        dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success'));\r\n        //jika create profile\r\n        if(!edit){\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    }catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const addExperience = (form, history) => async dispatch =>{\r\n    \r\n    try{\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/experience', form, config);\r\n\r\n        dispatch({\r\n            type : UPDATE_PROFILE,\r\n            payload : res.data\r\n        });\r\n\r\n        //set alert\r\n        dispatch(setAlert('experience was added', 'success'));\r\n        history.push('/dashboard');\r\n    }catch(err){\r\n\r\n       const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        });\r\n    }\r\n\r\n}\r\nexport const addEducation = (form, history) => async dispatch =>{\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    try{\r\n        const res = await axios.put('/api/profile/education', form, config);\r\n\r\n        dispatch({\r\n            type : UPDATE_PROFILE,\r\n            payload : res.data\r\n        });\r\n\r\n        //set alert\r\n        dispatch(setAlert('education was added', 'success'));\r\n        history.push('/dashboard');\r\n    }catch(err){\r\n\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type : PROFILE_ERROR,\r\n            payload : { msg : err.response.statusText, status : err.response.status}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//delete experience\r\nexport const deleteExperience = (id)=> async dispatch => {\r\n    if(window.confirm){\r\n\r\n        try{\r\n            const res = await axios.delete(`/api/profile/experience/${id}`);\r\n            dispatch({\r\n                type : UPDATE_PROFILE,\r\n                payload : res.data\r\n            })\r\n    \r\n            dispatch(setAlert('experince successremoved', 'success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : PROFILE_ERROR,\r\n                payload : { msg: err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//delete education\r\nexport const deleteEducation = (id)=> async dispatch => {\r\n    if(window.confirm){\r\n\r\n        try{\r\n            const res = await axios.delete(`/api/profile/education/${id}`);\r\n            dispatch({\r\n                type : UPDATE_PROFILE,\r\n                payload : res.data\r\n            });\r\n    \r\n            dispatch(setAlert('education success removed', 'success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : PROFILE_ERROR,\r\n                payload : { msg: err.response.statusText, status: err.response.status}\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// delete account \r\nexport const deleteAccount = ()=> async dispatch =>{\r\n    if(window.confirm){\r\n            try{\r\n                const res = await axios.delete(`/api/profile`);\r\n                dispatch({\r\n                    type : CLEAR_PROFILE\r\n                })\r\n                dispatch({\r\n                    type : ACCOUNT_DELETE\r\n                })\r\n                dispatch(setAlert('Your Account Has Been Deleted', 'success'));\r\n            }catch(err){\r\n                dispatch({\r\n                    type : PROFILE_ERROR,\r\n                    payload : { msg: err.response.statusText, status: err.response.status}\r\n\r\n                })\r\n            }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}