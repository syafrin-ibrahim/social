{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './types';\nexport const getAllPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      payload: res.data,\n      type: GET_POSTS\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statuText,\n        status: err.res.status\n      }\n    });\n  }\n};\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statuText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statuText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  if (window.confirm('yakin akan menghapus postingan ini ?')) {\n    try {\n      const res = await axios.delete(`/api/posts/${id}`);\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n      dispatch(setAlert('Post Success Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\nexport const addPost = form => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, form, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Success Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/nodejs/mediocademy/social/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","getAllPosts","dispatch","res","get","payload","data","type","err","msg","response","statuText","status","addLike","id","put","likes","removeLike","deletePost","window","confirm","delete","statusText","addPost","form","config","headers","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert } from './alert';\r\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './types';\r\n\r\n\r\nexport const getAllPosts = ()=> async dispatch => {\r\n    try{\r\n\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            payload : res.data,\r\n            type : GET_POSTS\r\n        })\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg: err.response.statuText, status: err.res.status }\r\n        })\r\n    }\r\n} \r\n\r\n\r\n\r\nexport const addLike = (id)=> async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n        dispatch({\r\n            type : UPDATE_LIKES,\r\n            payload : { id, likes:  res.data}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statuText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const removeLike = (id)=> async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n        dispatch({\r\n            type : UPDATE_LIKES,\r\n            payload : { id, likes:  res.data}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type : POST_ERROR,\r\n            payload : { msg : err.response.statuText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePost = (id)=> async dispatch => {\r\n    if(window.confirm('yakin akan menghapus postingan ini ?')){\r\n        try{\r\n            const res = await axios.delete(`/api/posts/${id}`);\r\n            dispatch({\r\n                type : DELETE_POST,\r\n                payload : id\r\n            })\r\n            dispatch(setAlert('Post Success Removed','success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : POST_ERROR,\r\n                payload : { msg : err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const  addPost = (form)=> async dispatch => {\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        try{\r\n            const res = await axios.post(`/api/posts`, form, config);\r\n            dispatch({\r\n                type : ADD_POST,\r\n                payload : res.data\r\n            })\r\n            dispatch(setAlert('Post Success Created','success'));\r\n        }catch(err){\r\n            dispatch({\r\n                type : POST_ERROR,\r\n                payload : { msg : err.response.statusText, status: err.response.status}\r\n            })\r\n        }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}